{"ast":null,"code":"// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\"\n  };\n};\n\nconst fetchDataSuccess = payload => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload\n  };\n};\n\nconst fetchDataFailed = payload => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload\n  };\n};\n\nexport const fetchData = account => {\n  return async dispatch => {\n    dispatch(fetchDataRequest());\n\n    try {\n      let name = await store.getState().blockchain.dumbDonuts.methods.name().call();\n      let supply = await store.getState().blockchain.dumbDonuts.methods.totalSupply().call();\n      dispatch(fetchDataSuccess({\n        name,\n        supply\n      }));\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/kim/Desktop/dumb_donuts/frontend_base_dapp/src/redux/data/dataActions.js"],"names":["store","fetchDataRequest","type","fetchDataSuccess","payload","fetchDataFailed","fetchData","account","dispatch","name","getState","blockchain","dumbDonuts","methods","call","supply","totalSupply","err","console","log"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMC,gBAAgB,GAAIC,OAAD,IAAa;AACpC,SAAO;AACLF,IAAAA,IAAI,EAAE,oBADD;AAELE,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMC,eAAe,GAAID,OAAD,IAAa;AACnC,SAAO;AACLF,IAAAA,IAAI,EAAE,mBADD;AAELE,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAME,SAAS,GAAIC,OAAD,IAAa;AACpC,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;;AACA,QAAI;AACF,UAAIQ,IAAI,GAAG,MAAMT,KAAK,CACnBU,QADc,GAEdC,UAFc,CAEHC,UAFG,CAEQC,OAFR,CAEgBJ,IAFhB,GAGdK,IAHc,EAAjB;AAKA,UAAIC,MAAM,GAAG,MAAMf,KAAK,CACrBU,QADgB,GAEhBC,UAFgB,CAELC,UAFK,CAEMC,OAFN,CAEcG,WAFd,GAGhBF,IAHgB,EAAnB;AAKAN,MAAAA,QAAQ,CACNL,gBAAgB,CAAC;AACfM,QAAAA,IADe;AAEfM,QAAAA;AAFe,OAAD,CADV,CAAR;AAMD,KAjBD,CAiBE,OAAOE,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAT,MAAAA,QAAQ,CAACH,eAAe,CAAC,oCAAD,CAAhB,CAAR;AACD;AACF,GAvBD;AAwBD,CAzBM","sourcesContent":["// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.dumbDonuts.methods.name()\n        .call();\n\n      let supply = await store\n        .getState()\n        .blockchain.dumbDonuts.methods.totalSupply()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          name,\n          supply,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}