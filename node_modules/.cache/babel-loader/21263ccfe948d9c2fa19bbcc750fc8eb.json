{"ast":null,"code":"var _jsxFileName = \"/Users/kim/Desktop/dumb_donuts/dumbdonuts/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { Div, StyleReset, ThemeProvider, Button, Text, Icon, Anchor } from \"atomize\";\nimport Welcome from \"./components/welcome\";\nimport Header from \"./components/header\";\nimport GIF from \"./components/gif\";\nimport Description from \"./components/description\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst debug = process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine(); // Create a client engine instance\n\nconst engine = new Styletron();\nconst theme = {\n  colors: {\n    black900: \"#1d1d1e\"\n  }\n};\n\nfunction App() {\n  _s();\n\n  // counting\n  const [count, setCount] = useState(0); // blockchain stuff\n\n  const dispatch = useDispatch();\n  const blockchain = useSelector(state => state.blockchain);\n  const data = useSelector(state => state.data);\n  const [mintingNFT, setMintingNFT] = useState(false);\n\n  const mintNFTS = _amount => {\n    setMintingNFT(true);\n    blockchain.dumbDonuts.methods.mint(blockchain.account, _amount).send({\n      from: blockchain.account,\n      value: blockchain.web3.utils.toWei((0.01 * _amount).toString(), \"ether\")\n    }).once(\"error\", err => {\n      console.log(err);\n      alert(\"Error\");\n      setMintingNFT(false);\n    }).then(receipt => {\n      alert(\"Successfully minted {\");\n      setMintingNFT(false);\n    });\n  };\n\n  useEffect(() => {\n    if (blockchain.account !== \"\" && blockchain.dumbDonuts !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  }, [blockchain.dumbDonuts, dispatch]);\n  return /*#__PURE__*/_jsxDEV(StyletronProvider, {\n    value: engine,\n    debug: debug,\n    debugAfterHydration: true,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(StyleReset, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        children: blockchain.account === \"\" || blockchain.dumbDonuts === null ? /*#__PURE__*/_jsxDEV(Div, {\n          d: \"flex\",\n          justify: \"center\",\n          align: \"center\",\n          minH: \"100vh\",\n          w: \"100vw\",\n          flexDir: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            align: \"center\",\n            top: \"1rem\",\n            m: {\n              b: \"40px\"\n            },\n            shadow: \"3\",\n            hoverShadow: \"4\",\n            rounded: \"circle\",\n            onClick: e => {\n              e.preventDefault();\n              dispatch(connect());\n            },\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), blockchain.errorMsg !== \"\" ? /*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"center\",\n            children: blockchain.errorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 46\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Div, {\n          d: \"flex\",\n          justify: \"center\",\n          align: \"center\",\n          minH: \"100vh\",\n          w: \"100vw\",\n          flexDir: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GIF, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            textSize: \"title\",\n            textWeight: \"500\",\n            m: {\n              b: \"40px\"\n            },\n            children: [data.totalSupply, \"  /  10,000 minted\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Div, {\n            d: \"flex\",\n            align: \"center\",\n            justify: \"center\",\n            m: {\n              b: \"40px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              h: \"2.5rem\",\n              w: \"2.5rem\",\n              hoverBg: \"gray800\",\n              bg: \"black900\",\n              rounded: \"circle\",\n              m: {\n                r: \"2rem\"\n              },\n              shadow: \"3\",\n              hoverShadow: \"4\",\n              onClick: () => {\n                count === 0 ? setCount(count) : setCount(count - 1);\n              },\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"Minus\",\n                size: \"20px\",\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              w: \"40px\",\n              m: {\n                l: \"2rem\",\n                r: \"2rem\"\n              },\n              textSize: \"title\",\n              textWeight: \"600\",\n              textAlign: \"center\",\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              h: \"2.5rem\",\n              w: \"2.5rem\",\n              hoverBg: \"gray800\",\n              bg: \"black900\",\n              rounded: \"circle\",\n              m: {\n                l: \"2rem\"\n              },\n              shadow: \"3\",\n              hoverShadow: \"4\",\n              onClick: () => {\n                count === 5 ? setCount(count) : setCount(count + 1);\n              },\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"Plus\",\n                size: \"20px\",\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), data.totalSupply !== 10000 ? /*#__PURE__*/_jsxDEV(Button, {\n            align: \"center\",\n            hoverBg: \"gray800\",\n            bg: \"black900\",\n            shadow: \"3\",\n            hoverShadow: \"4\",\n            rounded: \"circle\",\n            disabled: mintingNFT ? 1 : 0,\n            onClick: e => {\n              e.preventDefault();\n              {\n                count === 0 ? alert(\"Error. Amount to be minted cannot be 0.\") : mintNFTS(count);\n              }\n              ;\n            },\n            children: mintingNFT ? \"Minting\" : \"Mint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Anchor, {\n            href: \"https://www.google.com\",\n            target: \"_blank\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              align: \"center\",\n              hoverBg: \"info400\",\n              bg: \"info600\",\n              shadow: \"3\",\n              hoverShadow: \"4\",\n              rounded: \"circle\",\n              children: \"View on OpenSea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0bsC64jbHqDUVQGHnh3nyJ1jFNI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kim/Desktop/dumb_donuts/dumbdonuts/src/App.js"],"names":["React","useEffect","useState","useDispatch","useSelector","connect","fetchData","Provider","StyletronProvider","DebugEngine","Client","Styletron","Div","StyleReset","ThemeProvider","Button","Text","Icon","Anchor","Welcome","Header","GIF","Description","debug","process","env","NODE_ENV","engine","theme","colors","black900","App","count","setCount","dispatch","blockchain","state","data","mintingNFT","setMintingNFT","mintNFTS","_amount","dumbDonuts","methods","mint","account","send","from","value","web3","utils","toWei","toString","once","err","console","log","alert","then","receipt","b","e","preventDefault","errorMsg","totalSupply","r","l"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { Div, StyleReset, ThemeProvider, Button, Text, Icon, Anchor } from \"atomize\";\nimport Welcome from \"./components/welcome\";\nimport Header from \"./components/header\"\nimport GIF from \"./components/gif\"\nimport Description from \"./components/description\"\n\n\n\nconst debug =\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n\n// Create a client engine instance\nconst engine = new Styletron();\n\nconst theme = {\n  colors: {\n    black900: \"#1d1d1e\"\n  }\n};\n\nfunction App() {\n\n  // counting\n  const [count, setCount] = useState(0);\n\n  // blockchain stuff\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [mintingNFT, setMintingNFT] = useState(false);\n\n  const mintNFTS = (_amount) => {\n    setMintingNFT(true);\n    blockchain.dumbDonuts.methods.mint(blockchain.account, _amount).send({\n      from: blockchain.account,\n      value: blockchain.web3.utils.toWei((0.01 * _amount).toString(), \"ether\"),\n    })\n    .once(\"error\", (err) => {\n      console.log(err);\n      alert(\"Error\");\n      setMintingNFT(false);\n    })\n    .then((receipt) => {\n      alert(\"Successfully minted {\");\n      setMintingNFT(false);\n    });\n  };\n\n  useEffect(() => {\n    if (blockchain.account !== \"\" && blockchain.dumbDonuts !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  }, [blockchain.dumbDonuts, dispatch]);\n\n  \n  \n\n  return (\n\n    <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n      <ThemeProvider theme={theme}>\n        <StyleReset />\n        <Div>\n          {blockchain.account === \"\" || blockchain.dumbDonuts === null ? (\n            <Div \n            d=\"flex\" \n            justify=\"center\" \n            align=\"center\" \n            minH=\"100vh\" \n            w=\"100vw\" \n            flexDir=\"column\"\n            >\n              <Welcome />\n              <Button\n                  align=\"center\"\n                  top=\"1rem\"\n                  m={{ b: \"40px\" }}\n                  shadow=\"3\"\n                  hoverShadow=\"4\"\n                  rounded=\"circle\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    dispatch(connect());\n                  }}\n                >\n              Connect\n              </Button>\n              {blockchain.errorMsg !== \"\" ? (<Text textAlign=\"center\">{blockchain.errorMsg}</Text>) : null}\n            </Div>\n          ) : (\n            <Div \n            d=\"flex\" \n            justify=\"center\" \n            align=\"center\" \n            minH=\"100vh\" \n            w=\"100vw\" \n            flexDir=\"column\"\n            >\n              <Header />\n              <GIF />\n              <Description />\n              <Text textSize=\"title\" textWeight=\"500\" m={{ b: \"40px\" }}>{data.totalSupply}  /  10,000 minted</Text>\n              <Div d=\"flex\" align=\"center\" justify=\"center\" m={{ b: \"40px\" }}>\n                    \n                <Button \n                    h=\"2.5rem\"\n                    w=\"2.5rem\"\n                    hoverBg=\"gray800\"\n                    bg=\"black900\"\n                    rounded=\"circle\"\n                    m={{ r: \"2rem\" }}\n                    shadow=\"3\"\n                    hoverShadow=\"4\"\n                    onClick={() => {count === 0 ? setCount(count) : setCount(count - 1)}}\n                >\n                    <Icon name=\"Minus\" size=\"20px\" color=\"white\"/>\n                </Button>\n\n                <Text\n\n                    w=\"40px\"\n                    m={{ l: \"2rem\", r: \"2rem\" }} \n                    textSize=\"title\" \n                    textWeight=\"600\" \n                    textAlign=\"center\"\n                >\n                {count}\n                </Text>\n\n                <Button \n                    h=\"2.5rem\"\n                    w=\"2.5rem\"\n                    hoverBg=\"gray800\"\n                    bg=\"black900\"\n                    rounded=\"circle\"\n                    m={{ l: \"2rem\" }}\n                    shadow=\"3\"\n                    hoverShadow=\"4\"\n                    onClick={() => {count === 5 ? setCount(count) : setCount(count + 1)}}\n                >\n                    <Icon name=\"Plus\" size=\"20px\" color=\"white\"/>\n                </Button>\n\n              </Div>\n              {data.totalSupply !== 10000 ?\n              <Button\n                  align=\"center\"\n                  hoverBg=\"gray800\"\n                  bg=\"black900\"\n                  shadow=\"3\"\n                  hoverShadow=\"4\"\n                  rounded=\"circle\"\n                  disabled={mintingNFT ? 1 : 0}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    {count === 0 ? alert(\"Error. Amount to be minted cannot be 0.\") : mintNFTS(count)};\n                  }}\n                >\n                {mintingNFT ? \"Minting\" : \"Mint\"}\n                </Button> : \n                <Anchor href=\"https://www.google.com\" target=\"_blank\">\n                  <Button\n                    align=\"center\"\n                    hoverBg=\"info400\"\n                    bg=\"info600\"\n                    shadow=\"3\"\n                    hoverShadow=\"4\"\n                    rounded=\"circle\"\n                  >\n                  View on OpenSea\n                  </Button>\n                </Anchor>}\n            </Div>\n          )\n          }\n        </Div>\n      </ThemeProvider>\n    </StyletronProvider>\n  );\n}\n  \nexport default App;"]},"metadata":{},"sourceType":"module"}