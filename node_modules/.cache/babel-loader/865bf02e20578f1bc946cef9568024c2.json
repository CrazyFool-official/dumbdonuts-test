{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kim/Desktop/dumb_donuts/dumbdonuts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kim/Desktop/dumb_donuts/dumbdonuts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// log\nimport store from\"../store\";var fetchDataRequest=function fetchDataRequest(){return{type:\"CHECK_DATA_REQUEST\"};};var fetchDataSuccess=function fetchDataSuccess(payload){return{type:\"CHECK_DATA_SUCCESS\",payload:payload};};var fetchDataFailed=function fetchDataFailed(payload){return{type:\"CHECK_DATA_FAILED\",payload:payload};};export var fetchData=function fetchData(account){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var name,totalSupply;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(fetchDataRequest());_context.prev=1;_context.next=4;return store.getState().blockchain.dumbDonuts.methods.name().call();case 4:name=_context.sent;_context.next=7;return store.getState().blockchain.dumbDonuts.methods.totalSupply().call();case 7:totalSupply=_context.sent;dispatch(fetchDataSuccess({name:name,totalSupply:totalSupply}));_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);console.log(_context.t0);dispatch(fetchDataFailed(\"Could not load data from contract.\"));case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/kim/Desktop/dumb_donuts/dumbdonuts/src/redux/data/dataActions.js"],"names":["store","fetchDataRequest","type","fetchDataSuccess","payload","fetchDataFailed","fetchData","account","dispatch","getState","blockchain","dumbDonuts","methods","name","call","totalSupply","console","log"],"mappings":"6TAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,UAAlB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,MAAO,CACLC,IAAI,CAAE,oBADD,CAAP,CAGD,CAJD,CAMA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,OAAD,CAAa,CACpC,MAAO,CACLF,IAAI,CAAE,oBADD,CAELE,OAAO,CAAEA,OAFJ,CAAP,CAID,CALD,CAOA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACD,OAAD,CAAa,CACnC,MAAO,CACLF,IAAI,CAAE,mBADD,CAELE,OAAO,CAAEA,OAFJ,CAAP,CAID,CALD,CAOA,MAAO,IAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,OAAD,CAAa,CACpC,+FAAO,iBAAOC,QAAP,uIACLA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR,CADK,sCAGcD,CAAAA,KAAK,CACnBS,QADc,GAEdC,UAFc,CAEHC,UAFG,CAEQC,OAFR,CAEgBC,IAFhB,GAGdC,IAHc,EAHd,QAGCD,IAHD,qCAQqBb,CAAAA,KAAK,CAC1BS,QADqB,GAErBC,UAFqB,CAEVC,UAFU,CAECC,OAFD,CAESG,WAFT,GAGrBD,IAHqB,EARrB,QAQCC,WARD,eAaHP,QAAQ,CACNL,gBAAgB,CAAC,CACfU,IAAI,CAAJA,IADe,CAEfE,WAAW,CAAXA,WAFe,CAAD,CADV,CAAR,CAbG,iFAoBHC,OAAO,CAACC,GAAR,cACAT,QAAQ,CAACH,eAAe,CAAC,oCAAD,CAAhB,CAAR,CArBG,qEAAP,+DAwBD,CAzBM","sourcesContent":["// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.dumbDonuts.methods.name()\n        .call();\n\n      let totalSupply = await store\n        .getState()\n        .blockchain.dumbDonuts.methods.totalSupply()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          name,\n          totalSupply,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}